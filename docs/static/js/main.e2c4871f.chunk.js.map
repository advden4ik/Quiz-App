{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.css","containers/Auth/Auth.module.css","components/UI/Input/Input.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","containers/QuizList/QuizList.module.css","components/Navigation/MenuToggle/MenuToggle.jsx","components/UI/Backdrop/Backdrop.jsx","components/Navigation/Drawer/Drawer.jsx","hoc/Layout/Layout.jsx","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.jsx","components/ActiveQuiz/AnswersList/AnswersList.jsx","components/ActiveQuiz/ActiveQuiz.jsx","components/UI/Button/Button.jsx","components/FinishedQuiz/FinishedQuiz.jsx","components/UI/Loader/Loader.jsx","axios/axios-quiz.js","redux/actions/quizActions.js","containers/Quiz/Quiz.jsx","components/UI/Input/Input.jsx","axios/api-key.js","redux/actions/authActions.js","containers/Auth/Auth.jsx","form/formFramework.js","components/UI/Select/Select.jsx","containers/QuizCreator/QuizCreator.jsx","redux/actions/quizCreatorActions.js","redux/actions/quizListActions.js","containers/QuizList/QuizList.jsx","components/Logout/Logout.jsx","App.js","serviceWorker.js","redux/reducers/quizListReducer.js","redux/reducers/quizReducer.js","redux/reducers/quizCreatorReducer.js","redux/reducers/authReducer.js","redux/reducers/rootReducer.js","redux/store/store.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","close","links","to","label","exact","isAuthenticated","map","link","index","key","activeClassName","active","onClose","connect","state","auth","token","React","useState","setIsOpen","handleToggleMenu","Layout","children","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Loader","center","axios","create","baseURL","fetchQuizSuccess","quizSetState","answerState","isQuizFinished","activeQuestion","Quiz","this","fetchQuizById","match","params","retryQuiz","isFinished","loading","QuizWrapper","quizAnswerClick","Component","quizId","dispatch","a","async","get","response","data","error","answerId","getState","rightAnswerId","timeout","window","setTimeout","clearTimeout","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","API_KEY","authSuccess","logout","localStorage","removeItem","autoLogout","time","Auth","isFormValid","formControls","email","validation","required","password","minLength","handleLogin","handleRegister","handleSubmit","event","preventDefault","hangeChange","e","controlName","control","target","validateControl","forEach","name","setState","isValid","trim","test","String","toLowerCase","AuthForm","onSubmit","renderInputs","isLogin","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","createControl","config","validate","Select","options","option","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","handleAddQuestion","questionItem","createQuizQuestion","handleCreateQuiz","finishCreateQuiz","handleChange","handleSelectChange","Fragment","select","quizCreate","fetchQuizesSuccess","quizes","QuizList","fetchQuizes","renderQuizes","quizList","Logout","App","autoLogin","routes","path","component","compose","withRouter","getItem","Boolean","location","hostname","initialState","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2c4871f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3Gdd5\",\"close\":\"Drawer_close__1NgKo\",\"active\":\"Drawer_active__K668i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__3kE8S\",\"open\":\"MenuToggle_open__2BDGg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__FkzTM\",\"QuizWrapper\":\"Quiz_QuizWrapper__3D5bu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__VnpyX\",\"Question\":\"ActiveQuiz_Question__3Ef3C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__2hN74\",\"success\":\"AnswerItem_success__3M5k1\",\"error\":\"AnswerItem_error__fmFZs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__1YT2U\",\"success\":\"FinishedQuiz_success__2lhEi\",\"error\":\"FinishedQuiz_error__1YsL1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3kOhS\",\"success\":\"Button_success__1dK37\",\"error\":\"Button_error__6KM2M\",\"primary\":\"Button_primary__1lcqH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__1yoHf\",\"center\":\"Loader_center__rS-Pm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__FGiba\",\"AuthForm\":\"Auth_AuthForm__2-PIe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__34w5z\",\"invalid\":\"Input_invalid__1XsKF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2Agjv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2KFuW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__3yy_H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__1CUo3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__1TfIg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__2_umL\"};","import React from 'react';\r\nimport classes from './MenuToggle.module.css';\r\n\r\nconst MenuToggle = props => {\r\n    const cls = [\r\n        classes.MenuToggle,\r\n        'fa'\r\n    ]\r\n\r\n    if (props.isOpen) {\r\n        cls.push('fa-times');\r\n        cls.push(classes.open);\r\n    } else {\r\n        cls.push('fa-bars');\r\n    }\r\n\r\n    return (\r\n        <i\r\n            className={cls.join(' ')}\r\n            onClick={props.onToggle}\r\n        >\r\n\r\n        </i>\r\n    );\r\n};\r\n\r\nexport default MenuToggle;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick}></div>\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport classes from './Drawer.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nconst Drawer = props => {\r\n\r\n    const renderLinks = () => {\r\n        return links.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={link.to}\r\n                        exact={link.exact}\r\n                        activeClassName={classes.active}\r\n                        onClick={props.onClose}\r\n                    >\r\n                        {link.label}\r\n                    </NavLink>\r\n                </li>\r\n            );\r\n        });\r\n    }\r\n\r\n    const cls = [classes.Drawer];\r\n\r\n    if (!props.isOpen) {\r\n        cls.push(classes.close);\r\n    }\r\n\r\n    const links = [\r\n        {to: '/', label: 'Список', exact: true}\r\n    ];\r\n\r\n    if (props.isAuthenticated) {\r\n        links.push({to: '/quiz-creator', label: 'Создать тест', exact: false});\r\n        links.push({to: '/logout', label: 'Выйти', exact: false});\r\n    } else {\r\n        links.push({to: '/auth', label: 'Авторизация', exact: false});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav className={cls.join(' ')}>\r\n                <ul>\r\n                    { renderLinks(links) }\r\n                </ul>\r\n            </nav>\r\n            { props.isOpen ? <Backdrop onClick={props.onClose} /> : null }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Drawer;","import React from 'react';\r\nimport classes from './Layout.module.css';\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle';\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Layout = props => {\r\n\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n    const handleToggleMenu = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Layout}>\r\n\r\n            <Drawer\r\n                isOpen={isOpen}\r\n                onClose={handleToggleMenu}\r\n                isAuthenticated={props.isAuthenticated}\r\n            />\r\n\r\n            <MenuToggle\r\n                onToggle={handleToggleMenu}\r\n                isOpen={isOpen}\r\n            />\r\n\r\n            <main>\r\n                { props.children }\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: !!state.auth.token\r\n})\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport classes from './AnswerItem.module.css';\r\n\r\n\r\nconst AnswerItem = props => {\r\n\r\n    const cls = [classes.AnswerItem];\r\n\r\n    if (props.state) {\r\n        cls.push(classes[props.state])\r\n    }\r\n\r\n    return (\r\n        <li\r\n            className={cls.join(' ')}\r\n            onClick={ () => { props.onAnswerClick(props.answer.id) } }\r\n        >\r\n            { props.answer.text }\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem;","import React from 'react';\r\nimport classes from './AnswersList.module.css';\r\nimport AnswerItem from './AnswerItem/AnswerItem';\r\n\r\nconst AnswersList = props => (\r\n    <ul className={classes.AnswersList}>\r\n        { props.answers.map((answer, index) => {\r\n            return (\r\n                <AnswerItem\r\n                    key={`${answer.text}-${index}`}\r\n                    answer={answer}\r\n                    onAnswerClick={props.onAnswerClick}\r\n                    state={props.state ? props.state[answer.id] : null}\r\n                />\r\n            )\r\n        }) }\r\n    </ul>\r\n)\r\n\r\nexport default AnswersList;","import React from 'react';\r\nimport classes from './ActiveQuiz.module.css';\r\nimport AnswersList from './AnswersList/AnswersList';\r\n\r\nconst ActiveQuiz = props => (\r\n    <div className={classes.ActiveQuiz}>\r\n        <p className={classes.Question}>\r\n            <span>\r\n                <strong>{props.answerNumber}. </strong>\r\n                {props.question}\r\n            </span>\r\n\r\n            <small>{props.answerNumber} из {props.quizLength}</small>\r\n        </p>\r\n\r\n        <AnswersList\r\n            state={props.state}\r\n            answers={props.answers}\r\n            onAnswerClick={props.onAnswerClick}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default ActiveQuiz;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = props => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n\r\n    return (\r\n        <button\r\n            className={cls.join(' ')}\r\n            onClick={props.onClick}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './FinishedQuiz.module.css';\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst FinishedQuiz = props => {\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'success') {\r\n            total++\r\n        }\r\n        return total;\r\n    }, 0)\r\n\r\n    return (\r\n        <div className={classes.FinishedQuiz}>\r\n            <ul>\r\n                { props.quiz.map((quizItem, index) => {\r\n                    \r\n                    const cls = [\r\n                        'fa',\r\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n                        classes[props.results[quizItem.id]]\r\n                    ]\r\n\r\n                    return (\r\n                        <li key={quizItem.id}>\r\n                            <strong>{index + 1}. </strong>\r\n                            {quizItem.question}\r\n                            <i className={cls.join(' ')} />\r\n                        </li>\r\n                    )\r\n                }) }\r\n            </ul>\r\n\r\n            <p>Правильно {successCount} из {props.quiz.length}</p>\r\n\r\n            <div>\r\n                <Button\r\n                    onClick={props.onRetry}\r\n                    type='primary'\r\n                >\r\n                    Повторить\r\n                </Button>\r\n                <Link to='/'>\r\n                    <Button\r\n                        type='success'\r\n                    >\r\n                        Перейти в список тестов\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FinishedQuiz;","import React from 'react';\r\nimport classes from './Loader.module.css';\r\n\r\nconst Loader = () => (\r\n    <div className={classes.center}>\r\n        <div className={classes.Loader}>\r\n            <div /><div />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Loader;","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://quiz-app-12345.firebaseio.com/'\r\n});","import axios from \"../../axios/axios-quiz\";\r\n\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS';\r\nexport const FETCH_QUIZ_ERROR = 'FETCH_QUIZ_ERROR';\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE';\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ';\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION';\r\nexport const QUIZ_RETRY = 'QUIZ_RETRY';\r\n\r\nexport const fetchQuizSuccess = quiz => ({ type: FETCH_QUIZ_SUCCESS, quiz });\r\nexport const fetchQuizError = error => ({ type: FETCH_QUIZ_ERROR, error });\r\nexport const quizSetState = (answerState, results) => ({ type: QUIZ_SET_STATE, answerState, results });\r\nexport const finishQuiz = () => ({ type: FINISH_QUIZ });\r\nexport const quizNextQuestion = activeQuestion => ({ type: QUIZ_NEXT_QUESTION, activeQuestion });\r\nexport const retryQuiz = () => ({ type: QUIZ_RETRY });\r\n\r\nexport const fetchQuizById = quizId => async dispatch => {\r\n    try {\r\n        const response = await axios.get(`/quizes/${quizId}.json`);\r\n        const quiz = response.data;\r\n\r\n        dispatch(fetchQuizSuccess(quiz));\r\n\r\n    } catch (error) {\r\n        dispatch(fetchQuizError(error));\r\n    }\r\n}\r\n\r\nexport const quizAnswerClick = answerId => (dispatch, getState) => {\r\n    const state = getState().quiz;\r\n\r\n    if (state.answerState) {\r\n        const key = Object.keys(state.answerState)[0];\r\n        if (state.answerState[key] === 'success') {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const question = state.quiz[state.activeQuestion];\r\n    const results = {...state.results};\r\n    \r\n    if (question.rightAnswerId === answerId) {\r\n\r\n        if(!results[question.id]) {\r\n            results[question.id] = 'success'\r\n        }\r\n\r\n        dispatch(quizSetState({[answerId]: 'success'}, results));\r\n\r\n        const timeout = window.setTimeout(() => {\r\n            if (isQuizFinished(state)) {\r\n                dispatch(finishQuiz());\r\n            } else {\r\n                dispatch(quizNextQuestion(state.activeQuestion + 1));\r\n            }\r\n\r\n            window.clearTimeout(timeout);\r\n        }, 1000);\r\n    } else {\r\n        results[question.id] = 'error';\r\n        dispatch(quizSetState({[answerId]: 'error'}, results));\r\n    }\r\n}\r\n\r\nconst isQuizFinished = (state) => state.activeQuestion + 1 === state.quiz.length;","import React, { Component } from 'react';\r\nimport classes from './Quiz.module.css';\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport { connect } from 'react-redux';\r\nimport { fetchQuizById, quizAnswerClick, retryQuiz } from '../../redux/actions/quizActions';\r\n\r\nclass Quiz extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizById(this.props.match.params.id);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.retryQuiz();\r\n    }\r\n\r\n    render() {\r\n        const { results,\r\n                isFinished,\r\n                activeQuestion,\r\n                answerState,\r\n                quiz,\r\n                loading } = this.props.quiz;\r\n\r\n        return (\r\n            <div className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Ответьте на все вопросы</h1>\r\n\r\n                    {\r\n                        loading\r\n                        ? <Loader />\r\n                        : isFinished\r\n                          ? <FinishedQuiz\r\n                                results={results}\r\n                                quiz={quiz}\r\n                                onRetry={this.props.retryQuiz}\r\n                            />\r\n                          : <ActiveQuiz\r\n                                answers={quiz[activeQuestion].answers}\r\n                                question={quiz[activeQuestion].question}\r\n                                onAnswerClick={this.props.quizAnswerClick}\r\n                                quizLength={quiz.length}\r\n                                answerNumber={activeQuestion + 1}\r\n                                state={answerState}\r\n                            />\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz\r\n})\r\n\r\nexport default connect(mapStateToProps, { fetchQuizById, quizAnswerClick, retryQuiz })(Quiz);","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate && touched;\r\n}\r\n\r\nconst Input = props => {\r\n    const inputType = props.type || 'text';\r\n    const cls = [classes.Input];\r\n    const htmlFor = `${inputType}-${Math.random()}`;\r\n\r\n    if (isInvalid(props)) {\r\n        cls.push(classes.invalid);\r\n    }\r\n    \r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input\r\n                type={inputType}\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n\r\n            {\r\n                isInvalid(props)\r\n                ? <span>{props.errorMessage}</span>\r\n                : null\r\n            }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;","export const API_KEY = 'AIzaSyDxOa20Jg-JYALyuxmRldBSxbN5-x5Jg38'\r\n","import axios from 'axios';\r\nimport { API_KEY } from '../../axios/api-key';\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const authSuccess = token => ({type: AUTH_SUCCESS, token});\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('expirationDate');\r\n    return {\r\n        type: AUTH_LOGOUT\r\n    }\r\n};\r\n\r\nexport const auth = (email, password, isLogin) => async dispatch => {\r\n    const authData = {\r\n        email,\r\n        password,\r\n        returnSecureToken: true\r\n    };\r\n\r\n    let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=' + API_KEY;\r\n\r\n    if (isLogin) {\r\n        url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=' + API_KEY;\r\n    }\r\n\r\n    const response = await axios.post(url, authData);\r\n    const data = response.data;\r\n\r\n    const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n    localStorage.setItem('token', data.idToken);\r\n    localStorage.setItem('userId', data.localId);\r\n    localStorage.setItem('expirationDate', expirationDate);\r\n\r\n    dispatch(authSuccess(data.idToken));\r\n    dispatch(autoLogout(data.expiresIn));\r\n}\r\n\r\nconst autoLogout = time => dispatch => {\r\n    setTimeout(() => {\r\n        dispatch(logout());\r\n    }, time * 1000);\r\n}\r\n\r\nexport const autoLogin = () => async dispatch => {\r\n    const token = localStorage.getItem('token');\r\n    if(!token) {\r\n        dispatch(logout());\r\n    } else {\r\n        const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n        if (expirationDate <= new Date()) {\r\n            dispatch(logout());\r\n        } else {\r\n            dispatch(authSuccess(token));\r\n            dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport classes from './Auth.module.css';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport { connect } from 'react-redux';\r\nimport { auth } from '../../redux/actions/authActions';\r\n\r\nfunction validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Введите корректный email',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Пароль',\r\n                errorMessage: 'Введите корректный пароль',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleLogin = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            true\r\n        );\r\n    }\r\n\r\n    handleRegister = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            false\r\n        );\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    validateControl(value, validation) {\r\n        if (!validation) {\r\n            return true;\r\n        }\r\n\r\n        let isValid = true;\r\n\r\n        if (validation.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (validation.email) {\r\n            isValid = validateEmail(value) && isValid;\r\n        }\r\n\r\n        if (validation.minLength) {\r\n            isValid = value.length >= validation.minLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    hangeChange = (e, controlName) => {\r\n        const formControls = { ...this.state.formControls };\r\n        const control = { ...this.state.formControls[controlName] };\r\n\r\n        control.value = e.target.value;\r\n        control.touched = true;\r\n        control.valid = this.validateControl(control.value, control.validation);\r\n        \r\n        formControls[controlName] = control;\r\n\r\n        let isFormValid = true;\r\n\r\n        Object.keys(formControls).forEach( name => {\r\n            isFormValid = formControls[name].valid && isFormValid;\r\n        });\r\n\r\n        this.setState({\r\n            formControls, isFormValid\r\n        });\r\n    }\r\n\r\n    renderInputs() {\r\n        const inputs = Object.keys(this.state.formControls);\r\n        return inputs.map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n            return (\r\n                <Input\r\n                    key={controlName + index}\r\n                    value={control.value}\r\n                    type={control.type}\r\n                    label={control.label}\r\n                    errorMessage={control.errorMessage}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    shouldValidate={!!control.validation}\r\n                    onChange={ e => this.hangeChange(e, controlName) }\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n\r\n                    <form className={classes.AuthForm} onSubmit={this.handleSubmit}>\r\n                        \r\n                        { this.renderInputs() }\r\n\r\n                        <Button\r\n                            type='success'\r\n                            onClick={this.handleLogin}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                        <Button\r\n                            type='primary'\r\n                            onClick={this.handleRegister}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { auth })(Auth);","export function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n    if (!validation) {\r\n        return true;\r\n    }\r\n\r\n    let isValid = true;\r\n\r\n    if (validation.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    return isValid;\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n    let isFormValid = true;\r\n\r\n    for (const control in formControls) {\r\n        if (formControls.hasOwnProperty(control)) {\r\n            isFormValid = formControls[control].valid && isFormValid;\r\n        }\r\n    }\r\n\r\n    return isFormValid;\r\n}","import React from 'react';\r\nimport classes from './Select.module.css';\r\n\r\nconst Select = props => {\r\n    const htmlFor = `${props.label}-${Math.random()}`;\r\n\r\n    return (\r\n        <div className={classes.Select}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            >\r\n                { props.options.map((option, index) => {\r\n                    return (\r\n                        <option\r\n                            key={option.value + index}\r\n                            value={option.value}\r\n                        >\r\n                            {option.text}\r\n                        </option>\r\n                    )\r\n                }) }\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;","import React, { Component } from 'react';\r\nimport classes from './QuizCreator.module.css';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport { createControl, validate } from '../../form/formFramework';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Select from '../../components/UI/Select/Select';\r\nimport { connect } from 'react-redux';\r\nimport { createQuizQuestion, finishCreateQuiz } from '../../redux/actions/quizCreatorActions';\r\n\r\nfunction createOptionControl(number) {\r\n    return createControl({\r\n        label: 'Вопрос ' + number,\r\n        errorMessage: 'Вопрос не может быть пустым',\r\n        id: number\r\n    }, {required: true});\r\n}\r\n\r\nfunction createFormControls() {\r\n    return {\r\n        question: createControl({\r\n            label: 'Введите вопрос',\r\n            errorMessage: 'Вопрос не может быть пустым'\r\n        }, {required: true}),\r\n        option1: createOptionControl(1),\r\n        option2: createOptionControl(2),\r\n        option3: createOptionControl(3),\r\n        option4: createOptionControl(4),\r\n    }\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\r\n    state = {\r\n        rightAnswerId: 1,\r\n        isFormValid: false,\r\n        formControls: createFormControls()\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleAddQuestion = event => {\r\n        event.preventDefault();\r\n\r\n        const { formControls } = this.state;\r\n        \r\n        const questionItem = {\r\n            question: formControls.question.value,\r\n            id: this.props.quiz.length + 1,\r\n            rightAnswerId: this.state.rightAnswerId,\r\n            answers: [\r\n                {text: formControls.option1.value, id: formControls.option1.id},\r\n                {text: formControls.option2.value, id: formControls.option2.id},\r\n                {text: formControls.option3.value, id: formControls.option3.id},\r\n                {text: formControls.option4.value, id: formControls.option4.id}\r\n            ]\r\n        }\r\n\r\n        this.props.createQuizQuestion(questionItem);\r\n\r\n        this.setState({\r\n            rightAnswerId: 1,\r\n            isFormValid: false,\r\n            formControls: createFormControls()\r\n        });\r\n    }\r\n\r\n    handleCreateQuiz = async event => {\r\n        event.preventDefault();\r\n        \r\n        this.setState({\r\n            rightAnswerId: 1,\r\n            isFormValid: false,\r\n            formControls: createFormControls()\r\n        });\r\n\r\n        this.props.finishCreateQuiz(this.props.quiz);\r\n    }\r\n\r\n    handleChange = (value, controlName) => {\r\n        const formControls = { ...this.state.formControls };\r\n        const control = { ...this.state.formControls[controlName] };\r\n\r\n        control.value = value;\r\n        control.touched = true;\r\n        control.valid = validate(control.value, control.validation);\r\n\r\n        formControls[controlName] = control;\r\n\r\n        this.setState({\r\n            formControls,\r\n            isFormValid: validate(formControls)\r\n        });\r\n    }\r\n\r\n    handleSelectChange = e => {\r\n        this.setState({\r\n            rightAnswerId: +e.target.value\r\n        });\r\n    }\r\n\r\n    renderInputs() {\r\n        const inputs = Object.keys(this.state.formControls);\r\n        return inputs.map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n\r\n            return (\r\n                <React.Fragment key={controlName + index}>\r\n                    <Input\r\n                        label={control.label}\r\n                        value={control.value}\r\n                        valid={control.valid}\r\n                        shouldValidate={!!control.validation}\r\n                        touched={control.touched}\r\n                        errorMessage={control.errorMessage}\r\n                        onChange={ e => this.handleChange(e.target.value, controlName) }\r\n                    />\r\n                    { index === 0 ? <hr/> : null }\r\n                </React.Fragment>\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const select = <Select\r\n            label='Выберите правильный ответ'\r\n            value={this.state.rightAnswerId}\r\n            onChange={this.handleSelectChange}\r\n            options={[\r\n                {text: 1, value: 1},\r\n                {text: 2, value: 2},\r\n                {text: 3, value: 3},\r\n                {text: 4, value: 4},\r\n            ]}\r\n        />\r\n\r\n        return (\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>Создание теста</h1>\r\n\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        \r\n                        { this.renderInputs() }\r\n\r\n                        { select }\r\n\r\n                        <Button\r\n                            type='primary'\r\n                            onClick={this.handleAddQuestion}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Добавить вопрос\r\n                        </Button>\r\n                        <Button\r\n                            type='success'\r\n                            onClick={this.handleCreateQuiz}\r\n                            disabled={this.props.quiz.length === 0}\r\n                        >\r\n                            Создать тест\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps= state => ({\r\n    quiz: state.quizCreate.quiz\r\n})\r\n\r\nexport default connect(mapStateToProps, { createQuizQuestion, finishCreateQuiz })(QuizCreator);","import axios from \"../../axios/axios-quiz\";\r\n\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION';\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION';\r\n\r\nexport const createQuizQuestion = questionItem => ({type: CREATE_QUIZ_QUESTION, questionItem});\r\nexport const resetQuizCreation = () => ({type: RESET_QUIZ_CREATION});\r\n\r\nexport const finishCreateQuiz = quiz => dispatch => {\r\n    axios.post('/quizes.json', quiz);\r\n    dispatch(resetQuizCreation());\r\n}\r\n","import axios from \"../../axios/axios-quiz\";\r\n\r\nexport const FETCH_QUIZES_START = 'FETCH_QUIZES_START';\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS';\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR';\r\n\r\nexport const fetchQuizesStart = () => ({ type: FETCH_QUIZES_START });\r\nexport const fetchQuizesSuccess = (quizes) => ({ type: FETCH_QUIZES_SUCCESS, quizes });\r\nexport const fetchQuizesError = (error) => ({ type: FETCH_QUIZES_ERROR, error });\r\n\r\nexport const fetchQuizes = () => async dispatch => {\r\n    dispatch(fetchQuizesStart());\r\n    try {\r\n        const response = await axios.get('/quizes.json');\r\n\r\n        const quizes = [];\r\n        Object.keys(response.data).forEach((key, index) => {\r\n            quizes.push({\r\n                id: key,\r\n                name: `Тест №${index + 1}`\r\n            });\r\n        });\r\n\r\n        dispatch(fetchQuizesSuccess(quizes));\r\n\r\n    } catch (error) {\r\n        dispatch(fetchQuizesError(error));\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './QuizList.module.css';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport { connect } from 'react-redux';\r\nimport { fetchQuizes } from '../../redux/actions/quizListActions';\r\n\r\nclass QuizList extends Component {\r\n\r\n    renderQuizes() {\r\n        return this.props.quizes.map((quiz, index) => {\r\n            return (\r\n                <li key={quiz.id}>\r\n                    <NavLink to={'/quiz/' + quiz.id}>\r\n                        { quiz.name }\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizes();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                    <h1>Список тестов</h1>\r\n\r\n                    {\r\n                        this.props.loading\r\n                        ? <Loader />\r\n                        : <ul>\r\n                              { this.renderQuizes() }\r\n                          </ul>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quizes: state.quizList.quizes,\r\n    loading: state.quizList.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchQuizes })(QuizList);","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/actions/authActions';\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.logout();\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to='/' />\r\n    }\r\n}\r\n\r\nexport default connect(null, { logout })(Logout);","import React from 'react';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport Quiz from './containers/Quiz/Quiz';\r\nimport Auth from './containers/Auth/Auth';\r\nimport QuizCreator from './containers/QuizCreator/QuizCreator';\r\nimport QuizList from './containers/QuizList/QuizList';\r\nimport { connect } from 'react-redux';\r\nimport Logout from './components/Logout/Logout';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { autoLogin } from './redux/actions/authActions';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.autoLogin();\r\n  }\r\n\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path='/auth' component={Auth} />\r\n        <Route path='/quiz/:id' component={Quiz} />\r\n        <Route path='/' exact component={QuizList} />\r\n        <Redirect to='/' />\r\n      </Switch>\r\n    );\r\n\r\n    if (this.props.isAuthenticated) {\r\n      routes = <Switch>\r\n        <Route path='/quiz-creator' component={QuizCreator} />\r\n        <Route path='/quiz/:id' component={Quiz} />\r\n        <Route path='/logout' component={Logout} />\r\n        <Route path='/' exact component={QuizList} />\r\n        <Redirect to='/' />\r\n      </Switch>\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Layout>\r\n          { routes }\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: !!state.auth.token\r\n});\r\n\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { autoLogin })\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { FETCH_QUIZES_START, FETCH_QUIZES_SUCCESS, FETCH_QUIZES_ERROR } from \"../actions/quizListActions\";\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const quizListReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_QUIZES_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_QUIZES_SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    quizes: action.quizes,\r\n                    loading: false\r\n                }\r\n        case FETCH_QUIZES_ERROR:\r\n                return {\r\n                    ...state,\r\n                    loading: false,\r\n                    error: action.error\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { FETCH_QUIZ_SUCCESS, FETCH_QUIZ_ERROR, QUIZ_SET_STATE, FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_RETRY } from \"../actions/quizActions\";\r\n\r\nconst initialState = {\r\n    results: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n    quiz: [],\r\n    loading: true,\r\n    error: null\r\n}\r\n\r\nexport const quizReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_QUIZ_SUCCESS:\r\n            return {\r\n                ...state,\r\n                quiz: action.quiz,\r\n                loading: false\r\n            }\r\n        case FETCH_QUIZ_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        case QUIZ_SET_STATE:\r\n            return {\r\n                ...state,\r\n                answerState: action.answerState,\r\n                results: action.results\r\n            }\r\n        case FINISH_QUIZ:\r\n            return {\r\n                ...state,\r\n                isFinished: true\r\n            }\r\n        case QUIZ_NEXT_QUESTION:\r\n            return {\r\n                ...state,\r\n                activeQuestion: action.activeQuestion,\r\n                answerState: null\r\n            }\r\n        case QUIZ_RETRY:\r\n            return {\r\n                ...state,\r\n                results: {},\r\n                isFinished: false,\r\n                activeQuestion: 0,\r\n                answerState: null,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from \"../actions/quizCreatorActions\";\r\n\r\nconst initialState = {\r\n    quiz: []\r\n}\r\n\r\nexport const quizCreateReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_QUIZ_QUESTION:\r\n            return {\r\n                ...state,\r\n                quiz: [\r\n                    ...state.quiz,\r\n                    action.questionItem\r\n                ]\r\n            }\r\n        case RESET_QUIZ_CREATION:\r\n            return {\r\n                ...state,\r\n                quiz: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { AUTH_SUCCESS, AUTH_LOGOUT } from \"../actions/authActions\";\r\n\r\nconst initialState = {\r\n    token: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AUTH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        case AUTH_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { quizListReducer } from './quizListReducer';\r\nimport { quizReducer } from './quizReducer';\r\nimport { quizCreateReducer } from './quizCreatorReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    quizList: quizListReducer,\r\n    quiz: quizReducer,\r\n    quizCreate: quizCreateReducer,\r\n    auth: authReducer,\r\n});","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}